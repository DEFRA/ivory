{
  "name": "ivory",
  "version": "0.15.0",
  "description": "Digital service to support the Ivory Act",
  "main": "index.js",
  "scripts": {
    "start": "node index.js",
    "build:css": "bin/build-css",
    "build": "bin/build",
    "debug": "nodemon --inspect index.js",
    "docker": "npm run docker:build && npm run docker:run",
    "docker:build": "docker build --no-cache -t ivory/ivory .",
    "docker:run": "docker run -p \"3000:3000\" ivory/ivory",
    "lint": "standard",
    "unit-test": "npx jest --detectOpenHandles --forceExit --verbose",
    "test": "npm run lint && npm run unit-test",
    "postinstall": "npm run build"
  },
  "author": "Department for Environment, Food & Rural Affairs",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/DEFRA/ivory/issues"
  },
  "homepage": "https://github.com/DEFRA/ivory#readme",
  "repository": {
    "type": "git",
    "url": "https://github.com/DEFRA/ivory.git"
  },
  "engines": {
    "node": "14.x"
  },
  "dependencies": {
    "@defra/hapi-gapi": "^1.2.0",
    "@hapi/basic": "^6.0.0",
    "@hapi/boom": "^9.1.4",
    "@hapi/hapi": "^20.1.5",
    "@hapi/inert": "^6.0.4",
    "@hapi/vision": "^6.1.0",
    "adal-node": "^0.2.2",
    "bcrypt": "^5.0.1",
    "blipp": "^4.0.2",
    "disinfect": "^1.1.0",
    "dotenv": "^10.0.0",
    "govuk-frontend": "^3.13.0",
    "hapi-pino": "8.3.0",
    "hapi-redis2": "^3.0.1",
    "hapi-robots": "^3.2.2",
    "hapi-sanitize-payload": "^2.0.0",
    "joi": "^17.4.2",
    "moment": "^2.29.1",
    "node-fetch": "^2.6.1",
    "node-sass": "^6.0.1",
    "notifications-node-client": "^5.1.0",
    "nunjucks": "3.2.3",
    "postcode-validator": "^3.5.3",
    "randomstring": "^1.2.1",
    "sharp": "^0.29.0",
    "uuid": "^8.3.2"
  },
  "devDependencies": {
    "jest": "^27.1.0",
    "jest-junit": "^12.2.0",
    "jsdom": "^17.0.0",
    "nock": "^13.1.3",
    "standard": "^16.0.3"
  },
  "standard": {
    "globals": [
      "describe",
      "beforeEach",
      "expect",
      "it",
      "afterEach",
      "jest",
      "beforeAll",
      "afterAll"
    ]
  }
}
